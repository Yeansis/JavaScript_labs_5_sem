// возможность изменения пользователем исходных значений
imp_data_1 = /(?:(?:\s*[+>~,]\s*|\s+)|[^:+>~,\s\\[\]]+(?:\\.[^:+>~,\s\\[\]]*)*)|\[(?:[^\\[\]]*(?:\\.[^\\[\]]*)*|[^=]+=~?\s*(?:"[^\\"]*(?:\\.[^"\\]*)*"|'[^\\']*(?:\\.[^'\\]*)*'))]|:[^\\:([]+(?:\\.[^\\:([]*)*(?:\((?:[^\\()]*(?:\\.[^\\()]*)*|"[^\\"]*(?:\\.[^"\\]*)*"|'[^\\']*(?:\\.[^'\\]*)*')\))?/g;
console.log( find_reg_expr(imp_data_1), '\n');
imp_data_2 = "(}-:";
console.log( find_reg_expr(imp_data_2), '\n');
imp_data_3 = "Жыве Беларусь";
console.log( find_reg_expr(imp_data_3), '\n');
imp_data_4 = "ttb1@tpu.ru";
console.log( find_reg_expr(imp_data_4), '\n');


function find_reg_expr(obj) {

    /* обработка возможной ошибки на случай, если входные данные не
    смогут создать допустимый объект RegExp и будет поймано исключение*/
    try {
        new RegExp(obj);
    }catch(ex) {
        return "Заданное значение не является регулярным выражением";
    }

    // возврат положительного результата в случае успеха
    return "Заданное значение является регулярным выражением";
}